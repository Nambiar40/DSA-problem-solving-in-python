class QueueUsingTwoStacks:
    def __init__(self):
        self.stack1 = []
        self.stack2 = []

    def enqueue(self, x):
        self.stack1.append(x)

    def dequeue(self):
        if not self.stack2:
            while self.stack1:
                self.stack2.append(self.stack1.pop())
        self.stack2.pop()

    def front(self):
        if not self.stack2:
            while self.stack1:
                self.stack2.append(self.stack1.pop())
        print(self.stack2[-1])


# Driver code
q = int(input().strip())  # number of queries
queue = QueueUsingTwoStacks()

for _ in range(q):
    query = input().strip().split()
    if query[0] == "1":  # enqueue
        queue.enqueue(int(query[1]))
    elif query[0] == "2":  # dequeue
        queue.dequeue()
    elif query[0] == "3":  # print front
        queue.front()
